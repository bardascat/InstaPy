swagger: "2.0"
info:
  version: "1.0.0"
  title: Angie Rest API for Python APP
consumes:
- application/json
produces:
- application/jsona

basePath: /api

# Paths supported by the server application
paths:
  /status:
    get:
      operationId: status.getStatus
      tags:
      - Service status
      summary: Service status
      responses:
        200:
          description: Service is up
  /engagement-bots:
    get:
      operationId: engagement-bot.readAll
      tags:
      - Retrieve all active engagement bots
      summary: Returns all engagement bots
      responses:
        200:
          description: Successfully returned engagement bot list
  /engagement-bots:
    delete:
      operationId: engagement-bot.stopAll
      tags:
      - Stop all bots
      summary: Stop all bots
      responses:
        200:
          description: Successfully stopped all bots
  /engagement-bot:
    post:
      operationId: engagement-bot.start
      tags:
      - Start engagement bot
      summary: Starts a new engageemnt bot for a specific id_campaign
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: campaign
        required: true
        schema:
          $ref: '#/definitions/campaign'
      responses:
        201:
          description: Successfully started engagement bot
  /engagement-bot/{id_campaign}:
    get:
      operationId: engagement-bot.getBot
      tags:
      - GET an engagement bot
      summary: Returns the status of an engagement bot for a specific campaign
      parameters:
      - name: id_campaign
        in: path
        description: Id of the campaign
        type: string
        required: True
      responses:
        200:
          description: Returns bot details
        404:
          description: Engagement bot was not found for campaign
  /engagement-bot/{id_campaign}/log:
    get:
      operationId: engagement-bot.getBotLog
      tags:
      - GET campaign Log
      summary: Returns the log for a specific campaign
      parameters:
      - name: id_campaign
        in: path
        description: campaign id
        type: string
        required: True
      - name: date
        in: query
        description: log date
        type: string
        required: True
      responses:
        200:
          description: Returns campaign log
        404:
          description: Log was not found
  /engagement-bot/scheduler:
    post:
      operationId: engagement-bot.scheduler
      tags:
      - Schedule engagment bots
      summary: Creates a new engagemnt bot scheduler
      parameters:
      - in: body
        name: campaigns
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/campaign'
      responses:
        201:
          description: Successfully started an engagment bot scheduler
  /l4l-dispatcher:
    post:
      operationId: l4l-dispatcher.start
      tags:
      - Start l4l dispatcher
      summary: Starts a new instance of like for like dispatcher
      responses:
        201:
          description: Successfully started l4l dispatcher
    get:
      operationId: l4l-dispatcher.getDispatcher
      tags:
      - Retrieve l4l dispatcher
      summary: Retrieves the active l4l dispatcher or 404
      responses:
        200:
          description: Successfully started l4l dispatcher
        404:
          description: No active l4l dispatcher was found
  /bot/verify:
    get:
      operationId: bot.verify
      tags:
      - Verify instagram connection
      summary: Verify instagram credentials
      parameters:
      - name: username
        in: query
        description: instagram username
        type: string
        required: True
      - name: password
        in: query
        description: instagram password
        type: string
        required: True
      - name: id_campaign
        in: query
        description: id_campaign
        type: string
        required: True
      - name: twoFactorRecoveryCode
        in: query
        description: twoFactorRecoveryCode
        type: string
        required: false
        default: ''
      - name: unusualLoginToken
        in: query
        description: unusualLoginToken
        type: string
        required: false
        default: ''

      responses:
        200:
          description: Successfully connected to instagram
  /bot/user/{username}:
    get:
      operationId: bot.user
      tags:
      - Get instagram user info
      summary: Get instagram user info
      parameters:
      - name: username
        in: path
        description: instagram username
        type: string
        required: True
      responses:
        200:
          description: Successfully
  /bot/user/{username}/followers:
    get:
      operationId: bot.getUserFollowers
      tags:
      - user followers
      summary: Get User Followers
      parameters:
      - name: username
        in: path
        description: instagram username
        type: string
        required: True
      responses:
        200:
          description: Successfully returned user followers
  /bot/process:
    get:
      operationId: bot.getProcess
      tags:
      - Get process by name
      summary: Get process by name
      parameters:
      - name: query
        in: query
        description: process name
        type: string
        required: True
      responses:
        200:
          description: Successfully
  /location:
    get:
      operationId: location.search
      tags:
      - Search for instagram locations
      summary: Search instagram locations
      parameters:
      - name: query
        in: query
        description: location
        type: string
        required: True
      responses:
        200:
          description: Locations
  /crawler/feed:
    post:
      operationId: crawler.scanFeed
      tags:
      - Start feed crawler
      summary: Start feed crawler
      parameters:
      - in: body
        name: campaign
        required: true
        schema:
          $ref: '#/definitions/campaign'
      responses:
        201:
          description: Successfully created the crawler
  /crawler/profile:
    post:
      operationId: crawler.scanUserProfile
      tags:
      - Start profile crawler
      summary: Start profile crawler
      parameters:
      - in: body
        name: campaign
        required: true
        schema:
          $ref: '#/definitions/campaign'
      responses:
        201:
          description: Successfully created the crawler
  /crawler/user-followers:
    post:
      operationId: crawler.scanUserFollowers
      tags:
      - Start followers crawler
      summary: Start followers crawler
      parameters:
      - in: body
        name: campaign
        required: true
        schema:
          $ref: '#/definitions/campaign'
      responses:
        201:
          description: Successfully created the followers crawler
  /crawler/user-actions:
    post:
      operationId: crawler.scanUserActions
      tags:
      - Start user actions crawler
      summary: Start user actions crawler
      parameters:
      - in: body
        name: campaign
        required: true
        schema:
          $ref: '#/definitions/campaign'
      responses:
        201:
          description: Successfully created the user actions cralwer
  /crawler/user-followers/status:
    post:
      operationId: crawler.userFollowersCralwerStatus
      tags:
      - crawler
      summary: Get User Followers Cralwer status
      parameters:
      - in: body
        name: body
        required: true
        schema:
            $ref: '#/definitions/scan_followers_cralwer_status_request'
      responses:
        201:
          description: Successfully started an engagment bot scheduler
  /crawler/user-actions-queue/status:
    post:
      operationId: crawler.userActionsQueueStatus
      tags:
      - crawler
      summary: Get User Actions Queue status
      parameters:
      - in: body
        name: body
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/campaign'
      responses:
        201:
          description: Successfully started an engagment bot scheduler
  /crawler/process-user-followers:
    post:
      operationId: crawler.processUserFollowers
      tags:
      - Start process user followers crawler
      summary: Start process user follosers crawler
      responses:
        201:
          description: Successfully created the followers crawler
  /report/grouped:
    get:
      operationId: report.summary
      tags:
      - Bot actions group by operations
      summary: Bot actions group by operations
      parameters:
      - name: id_campaign
        in: query
        description: id_campaign
        type: string
        required: True
      - name: start
        in: query
        description: start
        type: string
        required: True
      - name: end
        in: query
        description: end
        type: string
        required: True
      - name: groupBy
        in: query
        description: end
        type: string
        required: True
      responses:
        200:
          description: Locations
  /report/followers/breakdown:
    get:
      operationId: report.getUserFollowersBreakdown
      tags:
      - followers
      summary: User followers history
      parameters:
      - name: instagram_username
        in: query
        description: instagram_username
        type: string
        required: True
      - name: since
        in: query
        description: since
        type: string
        required: True
      - name: until
        in: query
        description: until
        type: string
        required: True
      responses:
        201:
          description: Successfully created the follower crawler
definitions:
  campaign:
    type: object
    properties:
      id_campaign:
        type: number
    title: campaign
  scan_followers_cralwer_status_request:
    type: "object"
    properties:
      date:
        type: "string"
      campaigns:
        type: "array"
        items:
          type: "object"
          properties:
            id_campaign:
              type: "integer"